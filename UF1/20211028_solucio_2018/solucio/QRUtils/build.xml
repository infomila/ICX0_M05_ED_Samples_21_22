<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="QRUtils" default="default" basedir=".">
    <description>Builds, tests, and runs the project QRUtils.</description>
    <import file="nbproject/build-impl.xml"/>
     
        <!-- =========================================================== -->
        <!-- Aquestes línies s'inclouen per poder fer servir la tasca <if> i
        <foreach> -->
        <taskdef resource="net/sf/antcontrib/antcontrib.properties">
            <classpath>
            <pathelement location="lib/ant-contrib-1.0b3.jar"/>
            </classpath>
        </taskdef>
        <!-- =========================================================== -->

    <target name="-post-jar">
        <echo message="XXXXXXX"></echo>
        <copy   todir="${dist.dir}/examples">
            <fileset dir="examples"></fileset>
        </copy>
        <mkdir dir="${dist.dir}/output"></mkdir>
        <jar destfile="${dist.jar}" update="true">
            <zipgroupfileset dir="lib" includes="**/*.jar">
            </zipgroupfileset> 
            <zipfileset src="${reference.ZXingCore.jar}" includes="**/*.class"></zipfileset>
        </jar>
    </target>
    
    
    
    <!-- Exercici 6 -->
    <target name="TestQR" description="Exercici 6"
            depends="jar" > <!-- a) -->
         <!-- b) -->
        <splash displaytext="Testing QR" showduration="2"></splash>
        
        <property name="opcio1" value="Test Simple"></property>
        <property name="opcio2" value="Test Múltiple"></property>
        <input message="Seleccioneu una opció"     
               validargs="${opcio1},${opcio2}"
               addproperty="opcio"
               defaultvalue="${opcio1}"
        >
        </input>
        
        <if>
            <equals arg1="${opcio}" arg2="${opcio1}"></equals>
            <then>
                <!--1. Si tria “Test bàsic” -->
                <!--
                    1. La tasca executarà l’aplicació dues vegades, una per codificar i l’altre per decodificar,
                    de la mateixa forma que a l’exercic 3. Obtenim com a sortides un missatge1.png
                    (codificació) i un decoded1.txt (decodificació)
                    -->
                <property name="arxiu.original" value="examples/missatge.txt"></property>   
                <property name="arxiu.decodificat" value="examples/decodedAuto.txt"></property>  
                    
                <java classname="zxingclient.QREncoder">
                    <arg value="${arxiu.original}"/>
                    <arg value="examples/missatgeAuto.png"/>
                    <classpath>
                        <pathelement location="${dist.jar}"/>
                      </classpath>
                </java>
               <java classname="zxingclient.QRDecoder">                    
                    <arg value="examples/missatgeAuto.png"/>
                    <arg value="${arxiu.decodificat}"/>
                    <classpath>
                        <pathelement location="${dist.jar}"/>
                      </classpath>
                </java>           
                     
                <!--2. Amb la tasca <checksum> calculeu el resum MD5 de cadascun dels arxius i deseu-los
                a propietats MESSAGE_MD5 i DECODED_MD5. El resum MD5 és una cadena de
                mida fixa que representa tot l’arxiu.-->

                <checksum file="${arxiu.original}" property="MESSAGE_MD5"/>
                <checksum file="${arxiu.decodificat}" property="DECODED_MD5"/>

                <!--3. Si els resums són iguals, les probabilitats de que els dos arxius siguin idèntiques és
                MOLT alta. Compareu els dos MD5, en cas d’igualtat mostreu un missatge “Test
                superat” , altrament mostre un missatge “Test fallat, decoficació incorrecta” 
                -->                                                                                
                <echo message="${MESSAGE_MD5}"></echo>
                <echo message="${DECODED_MD5}"></echo>
                <if>
                    <equals arg1="${MESSAGE_MD5}" arg2="${DECODED_MD5}" ></equals>
                    <then>
                        <echo message="Test superat"></echo>
                    </then>
                    <else>
                        <fail message="Test no superat"></fail>
                    </else>
                </if>
            </then>
            <else>
                <!--      1. Carregeu la informació que hi ha a l’arxiu de propietats “servers.conf” -->
                <property file="servers.conf"></property>
       
                <!--2. Creeu una carpeta “downloads”-->
                <mkdir dir="downloads"></mkdir>
                <!--3. Amb la tasca <get> descarregueu a “downloads” l’arxiu que hi ha a la URL que
                    correspon a la propietat TEST_SERVER_URL de servers.conf. -->
                <get src="${TEST_SERVER_URL}" dest="downloads"></get>
                <!-- 4. Descomprimiu l’arxiu, i obtindreu múltiples arxius *.png i *.txt -->
                <unzip src="downloads/full_tests.zip"  dest="downloads"></unzip>     
                <!--
                5. Per cada arxiu png (tots contenen QRs), decodifiqueu-lo. Si l’arxiu png s’anomena
                “test1.png”, deseu el resultat a “test1.decoded.txt”.-->
                <foreach target="decodifica" param="arxiu" inheritall="true">
                    <fileset dir="downloads">
                        <include name="**/*.png"></include>
                    </fileset>
                </foreach>
      
            </else>
        </if>
  
    </target>
    
    <target name="decodifica">
                <!--
        5. Per cada arxiu png (tots contenen QRs), decodifiqueu-lo. 
         Si l’arxiu png s’anomena
        “test1.png”, deseu el resultat a “test1.decoded.txt”.-->
                
        <basename file="${arxiu}" property="file.name" suffix=".png"></basename>
        <java classname="zxingclient.QRDecoder">                    
            <arg value="${arxiu}"/>
            <arg value="downloads/${file.name}.decoded.txt"/>
            <classpath>
                <pathelement location="${dist.jar}"/>
              </classpath>
        </java>   
        
        
       <!--
            6. Compareu “test1.decoded.txt” amb “test1.txt” (el missatge original) usant el truc dels
            <checksum>. Si qualsevol dels testos no és correcte, feu fallar el test, altrament
            l’script mostra un “Tots els testos superats.” a l’acabar. Caldrà usar <basename>-->                

        <checksum file="downloads/${file.name}.txt" property="MESSAGE_MD5"/>
        <checksum file="downloads/${file.name}.decoded.txt" property="DECODED_MD5"/>

        <if>
            <equals arg1="${MESSAGE_MD5}" arg2="${DECODED_MD5}" ></equals>
            <then>
                <echo message="Test superat"></echo>
            </then>
            <else>
                <fail message="Test no superat"></fail>
            </else>
        </if>
        
    </target>
    
</project>
